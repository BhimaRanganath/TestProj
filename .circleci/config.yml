configure_machine: &configure_machine
  machine: true
  environment:
    _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError"'
    JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"

checkout_all: &checkout_all
  checkout:
    name: Checkout With all Submodules and Tags
    command: |
      git fetch --depth=2147483647
      git fetch --tags

save_gradle_wrapper_scan: &save_gradle_wrapper_scan
  save_cache:
    key: v{{ .Environment.cache_key }}-gradle-wrapper-{{ checksum "ecp-scanning-engine/gradle/wrapper/gradle-wrapper.properties" }}
    paths:
      - ~/ecp-scanning-engine/.gradle

load_gradle_wrapper_scan: &load_gradle_wrapper_scan
  restore_cache:
    keys:
      - v{{ .Environment.cache_key }}-gradle-wrapper-{{ checksum "ecp-scanning-engine/gradle/wrapper/gradle-wrapper.properties" }}

save_gradle_wrapper_install: &save_gradle_wrapper_install
  save_cache:
    key: v{{ .Environment.cache_key }}-gradle-wrapper-{{ checksum "ecp-installer/gradle/wrapper/gradle-wrapper.properties" }}
    paths:
      - ~/ecp-installer/.gradle

load_gradle_wrapper_install: &load_gradle_wrapper_install
  restore_cache:
    keys:
      - v{{ .Environment.cache_key }}-gradle-wrapper-{{ checksum "ecp-installer/gradle/wrapper/gradle-wrapper.properties" }}

save_gradle_deps: &save_gradle_deps
  save_cache:
    key: v{{ .Environment.cache_key }}-gradle-deps-{{ checksum "ecp-scanning-engine/build.gradle" }}
    paths:
      - ~/.gradle

load_gradle_deps: &load_gradle_deps
  restore_cache:
    keys:
      - v{{ .Environment.cache_key }}-gradle-deps-{{ checksum "ecp-scanning-engine/build.gradle" }}

save_gradle_deps_release: &save_gradle_deps_release
  save_cache:
    key: v{{ .Environment.cache_key }}-gradle-deps-release-{{ checksum "ecp-scanning-engine/build.gradle" }}
    paths:
      - ~/.gradle

load_gradle_deps_release: &load_gradle_deps_release
  restore_cache:
    keys:
      - v{{ .Environment.cache_key }}-gradle-deps-release-{{ checksum "ecp-scanning-engine/build.gradle" }}

save_project: &save_project
  save_cache:
    key: v{{ .Environment.cache_key }}-project-{{ .Branch }}-{{ .Revision }}
    paths:
      - ~/project

load_project: &load_project
  restore_cache:
    keys:
      - v{{ .Environment.cache_key }}-project-{{ .Branch }}-{{ .Revision }}

initialize_dev_environment: &initialize_dev_environment
  run:
    name: Initialize environment for dev build
    command: |
      echo 'export BUILD_NUMBER=$(cat ~/project/VERSION_BUILD_NUMBER.txt)' >> $BASH_ENV
      echo 'export TERM=xterm' >> $BASH_ENV
      echo 'export RELEASE_BUILD=false' >> $BASH_ENV
      echo 'export GROOVY_HOME=/home/circleci/.sdkman/candidates/groovy/current' >> $BASH_ENV
      source $BASH_ENV
      curl -s "https://get.sdkman.io" | bash && chmod 744 ~/.sdkman/bin/sdkman-init.sh && source ~/.sdkman/bin/sdkman-init.sh && sdk install groovy 2.4.5

initialize_release_environment: &initialize_release_environment
  run:
    name: Initialize environment for release build
    command: |
      echo 'export BUILD_NUMBER=$(cat ~/project/VERSION_BUILD_NUMBER.txt)' >> $BASH_ENV
      echo 'export TERM=xterm' >> $BASH_ENV
      echo 'export RELEASE_BUILD=true' >> $BASH_ENV
      echo 'export GROOVY_HOME=/home/circleci/.sdkman/candidates/groovy/current' >> $BASH_ENV
      source $BASH_ENV
      curl -s "https://get.sdkman.io" | bash && chmod 744 ~/.sdkman/bin/sdkman-init.sh && source ~/.sdkman/bin/sdkman-init.sh && sdk install groovy 2.4.5

version: 2

jobs:

  checkout_repo:
    <<: *configure_machine
    steps:
      - *checkout_all
      - run:
          name: Verifying commits follow semantic versioning
          command: ./semantic_commit_check.sh
      - run:
          name: Save version number
          command: |
                echo "$CIRCLE_BUILD_NUM"
                echo "export BUILD_NUMBER=$CIRCLE_BUILD_NUM" >> $BASH_ENV
                echo "$CIRCLE_BUILD_NUM" > ~/project/VERSION_BUILD_NUMBER.txt
                echo "~/project/VERSION_BUILD_NUMBER.txt contents:"
                cat ~/project/VERSION_BUILD_NUMBER.txt
      - *save_project
      - persist_to_workspace:
          root: ~/
          paths:
            - gradle
            - project

  download_dependencies:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew downloadDependencies
      - *save_gradle_wrapper_scan
      - *save_gradle_deps

  build_config_server:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :config-server:build
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/config-server/build/libs

  build_custom_rules:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :custom-rules:build
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/custom-rules/build/libs

  build_diagnostics:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :diagnostics:build
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/diagnostics/build/libs

  build_gateway:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :gateway:build
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/gateway/build/libs

  build_manager:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :manager:build
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/manager/build/libs

  build_proxy:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :proxy:build
      - *save_gradle_deps
      - *save_grdle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/proxy/build/libs

  build_registry:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :registry:build
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/registry/build/libs

  build_selenium:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :selenium:build
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/selenium/build/libs

  build_worker:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :worker:build
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/worker/build/libs

  build_worldspace_comply:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_scan
      - *initialize_dev_environment
      - run: cd ecp-scanning-engine && ./gradlew :worldspace-comply:build -x findbugsMain -x findbugsTest
      - *save_gradle_deps
      - *save_gradle_wrapper_scan
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-scanning-engine/worldspace-comply/build/libs

  build_installer:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_install
      - *initialize_dev_environment
      - run:
          name: Create the installer
          command: |
            cd ecp-installer && ./scripts/master_build_script.sh -w
      - run:
          name: Dump the installer to temp S3
          command: |
            cd ecp-installer
            ./scripts/publish_s3_linux.sh -b comply-temp -e $CIRCLE_SHA1
            ./scripts/publish_s3_windows.sh -b comply-temp -e $CIRCLE_SHA1
      - store_artifacts:
          path: ~/project/ecp-installer/installer/build/installer/
      - *save_gradle_deps
      - *save_gradle_wrapper_install
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-installer/installer/build/installer

  common_checkstyle_findbugs:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *load_gradle_deps
      - *load_gradle_wrapper_install
      - *initialize_dev_environment
      - run:
          name: Common Checkstyle
          command: |
            cd ecp-scanning-engine
            ./gradlew :common:checkstyleMain
            ./gradlew :common:findbugsMain
            ./gradlew :common:findBugsTest
      - run:
          name: custom-rules-common Checkstyle
          command: |
            cd ecp-scanning-engine
            ./gradlew :custom-rules-common:checkstyleMain
            ./gradlew :custom-rules-common:checkstyleTest
            ./gradlew :custom-rules-common:findbugsMain
            ./gradlew :custom-rules-common:findBugsTest
      - run:
          name: db-migrations Checkstyle
          command: |
            cd ecp-scanning-engine
            ./gradlew :db-migration:checkstyleMain
            ./gradlew :db-migration:checkstyleTest
            ./gradlew :db-migration:findbugsMain
            ./gradlew :db-migration:findBugsTest
      - run:
          name: security-Common Checkstyle
          command: |
            cd ecp-scanning-engine
            ./gradlew :security-common:checkstyleMain
            ./gradlew :security-common:checkstyleTest
            ./gradlew :security-common:findbugsMain
            ./gradlew :security-common:findBugsTest
      - run:
          name: selenium-Common Checkstyle
          command: |
            cd ecp-scanning-engine
            ./gradlew :selenium-common:checkstyleMain
            ./gradlew :selenium-common:checkstyleTest
            ./gradlew :selenium-common:findbugsMain
            ./gradlew :selenium-common:findBugsTest
      - run:
          name: worker-Common Checkstyle
          command: |
            cd ecp-scanning-engine
            ./gradlew :pdf-worker:checkstyleMain
            ./gradlew :pdf-worker:checkstyleTest
            ./gradlew :pdf-worker:findbugsMain
            ./gradlew :pdf-worker:findBugsTest
      - run:
          name: worker-Common Checkstyle
          command: |
            cd ecp-scanning-engine
            ./gradlew :worker-common:checkstyleMain
            ./gradlew :worker-common:checkstyleTest
            ./gradlew :worker-common:findbugsMain
            ./gradlew :worker-common:findBugsTest

  build_release:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *initialize_release_environment
      - *load_gradle_deps_release
      - *load_gradle_wrapper_scan
      - *load_gradle_wrapper_install
      - run:
          name: Build release artifact
          command: |
             cd ecp-scanning-engine
             ./gradlew downloadDependencies
             ./scripts/build.sh
             ./scripts/integration_test.sh
             cd ../ecp-installer
             ./scripts/master_build_script.sh -w
             wget https://install.goreleaser.com/github.com/tj/node-prune.sh; chmod 755 node-prune.sh; ./node-prune.sh
      - run:
          name: Build and save image
          command: |
            cd ecp-scanning-engine
            ./scripts/build_docker_config_server.sh
            ./scripts/build_docker_custom_rules.sh
            ./scripts/build_docker_diagnostics.sh
            ./scripts/build_docker_gateway.sh
            ./scripts/build_docker_manager.sh
            ./scripts/build_docker_nginx.sh
            ./scripts/build_docker_proxy.sh
            ./scripts/build_docker_registry.sh
            ./scripts/build_docker_selenium.sh
            ./scripts/build_docker_worker.sh
            ./scripts/build_docker_worldspace_comply.sh
            cd ../ecp-installer
            ./scripts/build_docker.sh
            ./scripts/create_docker_installer.sh
      - store_artifacts:
          path: ~/project/ecp-installer/installer/build/installer/
      - store_artifacts:
          path: ~/project/ecp-installer/docker-installer/build/installer/
      - *save_gradle_deps_release
      - *save_gradle_wrapper_scan
      - *save_gradle_wrapper_install
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-installer/installer/build/installer
            - project/ecp-installer/docker-installer/build/installer
            - project/ecp-installer/docker-installer/build/libs
            - project/ecp-installer/docker-installer/build/docker/keycloak

  build_docker_tarball:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Build and save image
          command: |
            cd ecp-scanning-engine
            ./scripts/build_docker_config_server.sh
            ./scripts/build_docker_custom_rules.sh
            ./scripts/build_docker_diagnostics.sh
            ./scripts/build_docker_gateway.sh
            ./scripts/build_docker_manager.sh
            ./scripts/build_docker_nginx.sh
            ./scripts/build_docker_proxy.sh
            ./scripts/build_docker_registry.sh
            ./scripts/build_docker_selenium.sh
            ./scripts/build_docker_worker.sh
            ./scripts/build_docker_worldspace_comply.sh
            cd ../ecp-installer
            ./scripts/build_docker.sh
            ./scripts/create_docker_installer.sh
      - run:
          name: Dump docker tarball to temp storage
          command: |
            cd ecp-installer
            ./scripts/publish_s3_docker.sh -b comply-temp -e $CIRCLE_SHA1
      - store_artifacts:
          path: ~/project/ecp-installer/docker-installer/build/installer/
      - persist_to_workspace:
          root: ~/
          paths:
            - project/ecp-installer/docker-installer/build/installer/

  publish_docker_installer:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Publish Docker images
          command: |
            cd ecp-installer/
            ./scripts/load_docker.sh
            cd ../ecp-scanning-engine
            ./scripts/push_docker.sh
            cd ../ecp-installer
            ./scripts/push_docker.sh
            ./scripts/publish_ECR_docker.sh
            ./scripts/publish_s3_docker.sh -b comply-snapshot -e $CIRCLE_SHA1

  archive_artifact_snapshot_s3:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - *initialize_dev_environment
      - run:
          name: Publish build to S3
          command: |
            echo 'export TERM=xterm' >> $BASH_ENV
            source $BASH_ENV
            cd ecp-installer
            ./scripts/publish_s3_linux.sh -b comply-snapshot -e $CIRCLE_SHA1
            ./scripts/publish_s3_windows.sh -b comply-snapshot -e $CIRCLE_SHA1

  archive_artifact_release_candidate_s3:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *initialize_release_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Publish build to S3
          command: |
            cd ecp-installer
            ./scripts/publish_s3_linux.sh -b comply-snapshot -e RELEASE_CANDIDATE
            ./scripts/publish_s3_windows.sh -b comply-snapshot -e RELEASE_CANDIDATE
            ./scripts/load_docker.sh
            ./scripts/publish_s3_docker.sh -b comply-snapshot -e RELEASE_CANDIDATE

  archive_artifact_release_s3:
    <<: *configure_machine
    steps:
      - attach_workspace:
          at: ~/
      - *initialize_release_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Publish build to S3
          command: |
            cd ecp-installer
            ./scripts/publish_s3_linux.sh -b comply-release -e RELEASE
            ./scripts/publish_s3_windows.sh -b comply-release -e RELEASE
            ./scripts/load_docker.sh
            ./scripts/publish_s3_docker.sh -b comply-release -e RELEASE



  deploy_dev_windows_update:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - run:
          name: windows experimental powershell deploy
          command: |
            cd ecp-installer
            ./scripts/powershell-docker-remote.sh -e comply-dev-windows-validation.dequelabs.com -o update -i comply-snapshot -a $CIRCLE_SHA1
          no_output_timeout: 2400

  deploy_qa_windows_validation_update:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - run:
          name: windows experimental powershell deploy
          command: |
            cd ecp-installer
            ./scripts/powershell-docker-remote.sh -e comply-qa-windows-validation.dequelabs.com -o update -i comply-snapshot -a $CIRCLE_SHA1
          no_output_timeout: 2400

  deploy_qa_centos:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/experimental_remote_ssh_upgrade_comply.sh -b $BUILD_NUMBER -c comply-release -e comply-qa-centos -i comply-snapshot -a $CIRCLE_SHA1 -o update

  deploy_dev_centos:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/experimental_remote_ssh_upgrade_comply.sh -b $BUILD_NUMBER -c comply-release -e comply-dev-centos -i comply-snapshot -a $CIRCLE_SHA1 -o update

  deploy_dev_docker:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy_dev_docker'
            cd ecp-installer
            ./scripts/circle_docker_deploy_controller.sh -b $BUILD_NUMBER -e comply-dev-centos-docker -i comply-snapshot -a $CIRCLE_SHA1

  deploy_qa_docker:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy_qa_docker'
            cd ecp-installer
            ./scripts/circle_docker_deploy_controller.sh -b $BUILD_NUMBER -e comply-qa-centos-docker -i comply-snapshot -a $CIRCLE_SHA1

  # DevOps experimental
  deploy_experimental:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/new_remote_ssh_upgrade_comply.sh -c comply-release -e experimental -i comply-snapshot -a $CIRCLE_SHA1 -o update

  deploy_bulk_stability:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Deploy Bulk Environment
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/experimental_remote_ssh_upgrade_comply.sh -b $BUILD_NUMBER -c comply-release -e comply-qa-centos-bulk -i comply-snapshot -a $CIRCLE_SHA1 -o update
      - run:
          name: Deploy stability environment
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/experimental_remote_ssh_upgrade_comply.sh -b $BUILD_NUMBER -c comply-release -e comply-qa-centos-stability -i comply-snapshot -a $CIRCLE_SHA1 -o update

  deploy_qa_windows_validation_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - run:
          name: windows experimental powershell deploy
          command: |
            cd ecp-installer
            ./scripts/powershell-docker-remote.sh -b $BUILD_NUMBER -e comply-qa-windows-validation.dequelabs.com -o install -i comply-temp -a $CIRCLE_SHA1
          no_output_timeout: 2400

  deploy_dev_windows_update_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - run:
          name: windows experimental powershell deploy
          command: |
            cd ecp-installer
            ./scripts/powershell-docker-remote.sh -b $BUILD_NUMBER -e comply-dev-windows-validation.dequelabs.com -o update -i comply-temp -a $CIRCLE_SHA1
          no_output_timeout: 2400

  deploy_qa_windows_validation_update_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - run:
          name: windows experimental powershell deploy
          command: |
            cd ecp-installer
            ./scripts/powershell-docker-remote.sh -b $BUILD_NUMBER -e comply-qa-windows-validation.dequelabs.com -o update -i comply-temp -a $CIRCLE_SHA1
          no_output_timeout: 2400

  deploy_qa_centos_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/experimental_remote_ssh_upgrade_comply.sh -b $BUILD_NUMBER -c comply-release -e comply-qa-centos -i comply-temp -a $CIRCLE_SHA1 -o update

  deploy_dev_centos_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/experimental_remote_ssh_upgrade_comply.sh -b $BUILD_NUMBER -c comply-release -e comply-dev-centos -i comply-temp -a $CIRCLE_SHA1 -o update

  deploy_dev_docker_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy_dev_docker'
            cd ecp-installer
            ./scripts/circle_docker_deploy_controller.sh -e comply-dev-centos-docker -i comply-temp -a $CIRCLE_SHA1 -b $BUILD_NUMBER 

  deploy_qa_docker_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy_qa_docker'
            cd ecp-installer
            ./scripts/circle_docker_deploy_controller.sh -e comply-qa-centos-docker -i comply-temp -a $CIRCLE_SHA1 -b $BUILD_NUMBER 

  # DevOps experimental
  deploy_experimental_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Define Environment Variables at Runtime and Run Remote Deploy Scripts
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/new_remote_ssh_upgrade_comply.sh -c comply-release -e experimental -i comply-temp -a $CIRCLE_SHA1 -o update

  deploy_bulk_stability_temp:
    <<: *configure_machine
    steps:
      - *load_project
      - *initialize_dev_environment
      - add_ssh_keys:
          fingerprints:
            - "8b:10:7c:49:05:c3:a0:95:ba:7b:38:29:bc:47:6f:7d"
      - run:
          name: Deploy Bulk Environment
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/experimental_remote_ssh_upgrade_comply.sh -b $BUILD_NUMBER -c comply-release -e comply-qa-centos-bulk -i comply-temp -a $CIRCLE_SHA1 -o update
      - run:
          name: Deploy stability environment
          command: |
            echo 'Inside deploy'
            cd ecp-installer
            ./scripts/experimental_remote_ssh_upgrade_comply.sh -b $BUILD_NUMBER -c comply-release -e comply-qa-centos-stability -i comply-temp -a $CIRCLE_SHA1 -o update

workflows:
  version: 2
  build_branch:
    jobs:
      - checkout_repo
      - download_dependencies:
          requires:
            - checkout_repo
      - common_checkstyle_findbugs:
          requires:
            - checkout_repo
      - build_config_server:
          requires:
            - checkout_repo
            - download_dependencies
      - build_custom_rules:
          requires:
            - checkout_repo
            - download_dependencies
      - build_diagnostics:
          requires:
            - checkout_repo
            - download_dependencies
      - build_gateway:
          requires:
            - checkout_repo
            - download_dependencies
      - build_manager:
          requires:
            - checkout_repo
            - download_dependencies
      - build_proxy:
          requires:
            - checkout_repo
            - download_dependencies
      - build_registry:
          requires:
            - checkout_repo
            - download_dependencies
      - build_selenium:
          requires:
            - checkout_repo
            - download_dependencies
      - build_worker:
          requires:
            - checkout_repo
            - download_dependencies
      - build_worldspace_comply:
          requires:
            - checkout_repo
            - download_dependencies
      - build_installer:
          requires:
            - checkout_repo
            - download_dependencies
            - build_config_server
            - build_custom_rules
            - build_diagnostics
            - build_gateway
            - build_manager
            - build_proxy
            - build_registry
            - build_selenium
            - build_worker
            - build_worldspace_comply
      - build_docker_tarball:
          requires:
            - checkout_repo
            - download_dependencies
            - build_config_server
            - build_custom_rules
            - build_diagnostics
            - build_gateway
            - build_manager
            - build_proxy
            - build_registry
            - build_selenium
            - build_worker
            - build_worldspace_comply
      - archive_artifact_snapshot_s3:
          requires:
            - checkout_repo
            - download_dependencies
            - build_config_server
            - build_custom_rules
            - build_diagnostics
            - build_gateway
            - build_manager
            - build_proxy
            - build_registry
            - build_selenium
            - build_worker
            - build_worldspace_comply
            - build_installer
          filters:
            branches:
              only:
                - develop
      - publish_docker_installer:
          requires:
            - checkout_repo
            - download_dependencies
            - build_config_server
            - build_custom_rules
            - build_diagnostics
            - build_gateway
            - build_manager
            - build_proxy
            - build_registry
            - build_selenium
            - build_worker
            - build_worldspace_comply
            - build_docker_tarball
          filters:
            branches:
              only:
                - develop
  release_build:
    jobs:
      - checkout_repo:
          filters:
            branches:
              only:
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_release_candidate:
          type: approval
          requires:
            - checkout_repo
          filters:
            branches:
              only:
                - /RELEASE-\d+\.\d+\.\d+/
      - build_release:
          requires:
            - approve_release_candidate
          filters:
            branches:
              only:
                - /RELEASE-\d+\.\d+\.\d+/
      - archive_artifact_release_candidate_s3:
          requires:
            - approve_release_candidate
            - build_release
          filters:
            branches:
              only:
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_release_s3:
          type: approval
          requires:
            - approve_release_candidate
            - build_release
            - archive_artifact_release_candidate_s3
          filters:
            branches:
              only:
                - /RELEASE-\d+\.\d+\.\d+/
      - archive_artifact_release_s3:
          requires:
            - approve_release_candidate
            - build_release
            - archive_artifact_release_candidate_s3
            - approve_release_s3
          filters:
            branches:
              only:
                - /RELEASE-\d+\.\d+\.\d+/
  approve_deployments:
    jobs:
      # DevOps experimental environment.
      - approve_experimental_deploy:
          type: approval
      - deploy_experimental:
          requires:
            - approve_experimental_deploy
          filters:
            branches:
              only:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - deploy_experimental_temp:
          requires:
            - approve_experimental_deploy
          filters:
            branches:
              ignore:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_bulk_stability_deploy:
          type: approval
      - deploy_bulk_stability:
          requires:
            - approve_bulk_stability_deploy
          filters:
            branches:
              only:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - deploy_bulk_stability_temp:
          requires:
            - approve_bulk_stability_deploy
          filters:
            branches:
              ignore:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_dev_docker_deploy:
          type: approval
      - deploy_dev_docker:
          requires:
            - approve_dev_docker_deploy
          filters:
            branches:
              only:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - deploy_dev_docker_temp:
          requires:
            - approve_dev_docker_deploy
          filters:
            branches:
              ignore:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_dev_centos_deploy:
          type: approval
      - deploy_dev_centos:
          requires:
            - approve_dev_centos_deploy
          filters:
            branches:
              only:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - deploy_dev_centos_temp:
          requires:
            - approve_dev_centos_deploy
          filters:
            branches:
              ignore:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_dev_windows_deploy:
          type: approval
      - deploy_dev_windows_update:
          requires:
            - approve_dev_windows_deploy
          filters:
            branches:
              only:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - deploy_dev_windows_update_temp:
          requires:
            - approve_dev_windows_deploy
          filters:
            branches:
              ignore:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_qa_docker_deploy:
          type: approval
      - deploy_qa_docker:
          requires:
            - approve_qa_docker_deploy
          filters:
            branches:
              only:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - deploy_qa_docker_temp:
          requires:
            - approve_qa_docker_deploy
          filters:
            branches:
              ignore:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_qa_centos_deploy:
          type: approval
      - deploy_qa_centos:
          requires:
            - approve_qa_centos_deploy
          filters:
            branches:
              only:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - deploy_qa_centos_temp:
          requires:
            - approve_qa_centos_deploy
          filters:
            branches:
              ignore:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - approve_qa_windows_validation_update_deploy:
          type: approval
      - deploy_qa_windows_validation_update:
          requires:
            - approve_qa_windows_validation_update_deploy
          filters:
            branches:
              only:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
      - deploy_qa_windows_validation_update_temp:
          requires:
            - approve_qa_windows_validation_update_deploy
          filters:
            branches:
              ignore:
                - develop
                - /RELEASE-\d+\.\d+\.\d+/
  weekly_deployments:
      triggers:
        - schedule:
            # Saturday 00:00 UTC -> Friday 19:00 EST
            cron: "0 0 * * 6"
            filters:
              branches:
                only:
                  - develop
      jobs:
        - checkout_repo
        - deploy_qa_centos:
            requires:
              - checkout_repo
            filters:
              branches:
                only:
                  develop
